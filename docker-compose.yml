version: '3.8'

services:
  influxdb:
    image: influxdb:2.7-alpine
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - ./influxdb/dashboards:/influxdb/dashboards
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_ORG=runners
      - DOCKER_INFLUXDB_INIT_BUCKET=connection-stats
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  data-loader:
    build:
      context: .
      dockerfile: docker/Dockerfile.data-loader
    volumes:
      - ${CSV_PATH:-./data}:/app/data
    environment:
      - CSV_PATH=/app/data/${CSV_FILE:-test.csv}
      - REDIS_URL=redis://redis:6379
      - DATA_LEVEL=${DATA_LEVEL:-999}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      - redis
    restart: on-failure

  runners:
    build:
      context: .
      dockerfile: docker/Dockerfile.runners
    environment:
      - WS_URL=${WS_URL:-wss://echo.websocket.events}
      - NUM_CONNECTIONS=${NUM_CONNECTIONS:-100}
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_TOKEN=my-super-secret-auth-token
      - INFLUX_ORG=runners
      - INFLUX_BUCKET=connection-stats
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - RETRY_DELAY_MS=${RETRY_DELAY_MS:-5000}
      - CONNECTION_MODE=${CONNECTION_MODE:-instant}
      - CONNECTION_RATE=${CONNECTION_RATE:-10}
      - REPLICAS=${REPLICAS:-3}
      # RUNNER_ID will be set to the container hostname automatically
    depends_on:
      - influxdb
      - redis
      - data-loader
    deploy:
      replicas: ${REPLICAS:-3}
      resources:
        limits:
          cpus: '1'
    restart: unless-stopped

volumes:
  influxdb-data:
  redis-data:
